{"version":3,"sources":["../../../../src/export/embed/exportEager.ts"],"sourcesContent":["import { exportEmbedInternalAsync } from './exportEmbedAsync';\nimport { getExportEmbedOptionsKey, resolveEagerOptionsAsync } from './resolveOptions';\nimport { env } from '../../utils/env';\n\nconst debug = require('debug')('expo:eager');\n\nexport async function exportEagerAsync(\n  projectRoot: string,\n  {\n    dev,\n    platform,\n    // We default to resetting the cache in non-CI environments since prebundling overwrites the cache reset later.\n    resetCache = !env.CI,\n    assetsDest,\n    bundleOutput,\n  }: {\n    dev: boolean;\n    platform: string;\n    resetCache?: boolean;\n    assetsDest?: string;\n    bundleOutput?: string;\n  }\n) {\n  const options = await resolveEagerOptionsAsync(projectRoot, {\n    dev,\n    platform,\n    resetCache,\n    assetsDest,\n    bundleOutput,\n  });\n  debug('Starting eager export: ' + options.bundleOutput);\n\n  await exportEmbedInternalAsync(projectRoot, options);\n\n  debug('Eager export complete');\n\n  return { options, key: getExportEmbedOptionsKey(options) };\n}\n"],"names":["exportEagerAsync","debug","require","projectRoot","dev","platform","resetCache","env","CI","assetsDest","bundleOutput","options","resolveEagerOptionsAsync","exportEmbedInternalAsync","key","getExportEmbedOptionsKey"],"mappings":"AAAA;;;;+BAMsBA,kBAAgB;;aAAhBA,gBAAgB;;kCANG,oBAAoB;gCACM,kBAAkB;qBACjE,iBAAiB;AAErC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,AAAC;AAEtC,eAAeF,gBAAgB,CACpCG,WAAmB,EACnB,EACEC,GAAG,CAAA,EACHC,QAAQ,CAAA,EACR,+GAA+G;AAC/GC,UAAU,EAAG,CAACC,IAAG,IAAA,CAACC,EAAE,CAAA,EACpBC,UAAU,CAAA,EACVC,YAAY,CAAA,EAOb,EACD;IACA,MAAMC,OAAO,GAAG,MAAMC,IAAAA,eAAwB,yBAAA,EAACT,WAAW,EAAE;QAC1DC,GAAG;QACHC,QAAQ;QACRC,UAAU;QACVG,UAAU;QACVC,YAAY;KACb,CAAC,AAAC;IACHT,KAAK,CAAC,yBAAyB,GAAGU,OAAO,CAACD,YAAY,CAAC,CAAC;IAExD,MAAMG,IAAAA,iBAAwB,yBAAA,EAACV,WAAW,EAAEQ,OAAO,CAAC,CAAC;IAErDV,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAE/B,OAAO;QAAEU,OAAO;QAAEG,GAAG,EAAEC,IAAAA,eAAwB,yBAAA,EAACJ,OAAO,CAAC;KAAE,CAAC;AAC7D,CAAC"}