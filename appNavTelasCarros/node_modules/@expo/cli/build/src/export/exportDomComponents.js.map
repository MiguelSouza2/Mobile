{"version":3,"sources":["../../../src/export/exportDomComponents.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config';\nimport assert from 'assert';\nimport crypto from 'crypto';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport url from 'url';\n\nimport { type PlatformMetadata } from './createMetadataJson';\nimport { type BundleOutput, type ExportAssetMap, getFilesFromSerialAssets } from './saveAssets';\nimport { type MetroBundlerDevServer } from '../start/server/metro/MetroBundlerDevServer';\nimport { serializeHtmlWithAssets } from '../start/server/metro/serializeHtml';\nimport {\n  getDomComponentHtml,\n  DOM_COMPONENTS_BUNDLE_DIR,\n} from '../start/server/middleware/DomComponentsMiddleware';\nimport { env } from '../utils/env';\nimport { resolveRealEntryFilePath, toPosixPath } from '../utils/filePath';\n\nconst debug = require('debug')('expo:export:exportDomComponents') as typeof console.log;\n\n// TODO(EvanBacon): determine how to support DOM Components with hosting.\nexport async function exportDomComponentAsync({\n  filePath,\n  projectRoot,\n  dev,\n  devServer,\n  isHermes,\n  includeSourceMaps,\n  exp,\n  files,\n  useMd5Filename = false,\n}: {\n  filePath: string;\n  projectRoot: string;\n  dev: boolean;\n  devServer: MetroBundlerDevServer;\n  isHermes: boolean;\n  includeSourceMaps: boolean;\n  exp: ExpoConfig;\n  files: ExportAssetMap;\n  useMd5Filename?: boolean;\n}): Promise<{\n  bundle: BundleOutput;\n  htmlOutputName: string;\n}> {\n  const virtualEntry = toPosixPath(resolveFrom(projectRoot, 'expo/dom/entry.js'));\n  debug('Bundle DOM Component:', filePath);\n  // MUST MATCH THE BABEL PLUGIN!\n  const hash = crypto.createHash('md5').update(filePath).digest('hex');\n  const outputName = `${DOM_COMPONENTS_BUNDLE_DIR}/${hash}.html`;\n  const generatedEntryPath = toPosixPath(\n    filePath.startsWith('file://') ? url.fileURLToPath(filePath) : filePath\n  );\n  const baseUrl = `/${DOM_COMPONENTS_BUNDLE_DIR}`;\n  // The relative import path will be used like URI so it must be POSIX.\n  const relativeImport = './' + path.posix.relative(path.dirname(virtualEntry), generatedEntryPath);\n  // Run metro bundler and create the JS bundles/source maps.\n  const bundle = await devServer.legacySinglePageExportBundleAsync({\n    platform: 'web',\n    domRoot: encodeURI(relativeImport),\n    splitChunks: !env.EXPO_NO_BUNDLE_SPLITTING,\n    mainModuleName: resolveRealEntryFilePath(projectRoot, virtualEntry),\n    mode: dev ? 'development' : 'production',\n    engine: isHermes ? 'hermes' : undefined,\n    serializerIncludeMaps: includeSourceMaps,\n    bytecode: false,\n    reactCompiler: !!exp.experiments?.reactCompiler,\n    baseUrl: './',\n    useMd5Filename,\n    // Minify may be false because it's skipped on native when Hermes is enabled, default to true.\n    minify: true,\n  });\n\n  if (useMd5Filename) {\n    for (const artifact of bundle.artifacts) {\n      const md5 = crypto.createHash('md5').update(artifact.source).digest('hex');\n      artifact.filename = `${md5}.${artifact.type}`;\n    }\n  }\n\n  const html = await serializeHtmlWithAssets({\n    isExporting: true,\n    resources: bundle.artifacts,\n    template: getDomComponentHtml(),\n    baseUrl: './',\n  });\n\n  const serialAssets = bundle.artifacts.map((a) => {\n    return {\n      ...a,\n      filename: path.join(baseUrl, a.filename),\n    };\n  });\n\n  getFilesFromSerialAssets(serialAssets, {\n    includeSourceMaps,\n    files,\n    platform: 'web',\n  });\n\n  files.set(outputName, {\n    contents: html,\n  });\n\n  return {\n    bundle,\n    htmlOutputName: outputName,\n  };\n}\n\n//#region `npx export` for updates\n\n/**\n * Add the DOM component bundle to the metadata for updates.\n */\nexport function addDomBundleToMetadataAsync(bundle: BundleOutput): PlatformMetadata['assets'] {\n  const assetsMetadata: PlatformMetadata['assets'] = [];\n  for (const artifact of bundle.artifacts) {\n    if (artifact.type === 'map') {\n      continue;\n    }\n    assetsMetadata.push({\n      path: `${DOM_COMPONENTS_BUNDLE_DIR}/${artifact.filename}`,\n      ext: artifact.type,\n    });\n  }\n  return assetsMetadata;\n}\n\n/**\n * Transform the DOM component entry (*.html) to use MD5 filename by its content.\n */\nexport function transformDomEntryForMd5Filename({\n  files,\n  htmlOutputName,\n}: {\n  files: ExportAssetMap;\n  htmlOutputName: string;\n}): PlatformMetadata['assets'] {\n  const htmlContent = files.get(htmlOutputName);\n  assert(htmlContent);\n  const htmlMd5 = crypto.createHash('md5').update(htmlContent.contents.toString()).digest('hex');\n  const htmlMd5Filename = `${DOM_COMPONENTS_BUNDLE_DIR}/${htmlMd5}.html`;\n  files.set(htmlMd5Filename, htmlContent);\n  files.delete(htmlOutputName);\n  return [\n    {\n      path: htmlMd5Filename,\n      ext: 'html',\n    },\n  ];\n}\n\n/**\n * Post-transform the native bundle to use MD5 filename based on DOM component entry content.\n */\nexport function transformNativeBundleForMd5Filename({\n  domComponentReference,\n  nativeBundle,\n  files,\n  htmlOutputName,\n}: {\n  domComponentReference: string;\n  nativeBundle: BundleOutput;\n  files: ExportAssetMap;\n  htmlOutputName: string;\n}) {\n  const htmlContent = files.get(htmlOutputName);\n  assert(htmlContent);\n  const htmlMd5 = crypto.createHash('md5').update(htmlContent.contents.toString()).digest('hex');\n  const hash = crypto.createHash('md5').update(domComponentReference).digest('hex');\n  for (const artifact of nativeBundle.artifacts) {\n    if (artifact.type !== 'js') {\n      continue;\n    }\n    const assetEntity = files.get(artifact.filename);\n    assert(assetEntity);\n    if (Buffer.isBuffer(assetEntity.contents)) {\n      const searchBuffer = Buffer.from(`${hash}.html`, 'utf8');\n      const replaceBuffer = Buffer.from(`${htmlMd5}.html`, 'utf8');\n      assert(searchBuffer.length === replaceBuffer.length);\n      let index = assetEntity.contents.indexOf(searchBuffer, 0);\n      while (index !== -1) {\n        replaceBuffer.copy(assetEntity.contents, index);\n        index = assetEntity.contents.indexOf(searchBuffer, index + searchBuffer.length);\n      }\n    } else {\n      const search = `${hash}.html`;\n      const replace = `${htmlMd5}.html`;\n      assert(search.length === replace.length);\n      assetEntity.contents = assetEntity.contents.toString().replaceAll(search, replace);\n    }\n  }\n}\n\n//#endregion `npx export` for updates\n"],"names":["exportDomComponentAsync","addDomBundleToMetadataAsync","transformDomEntryForMd5Filename","transformNativeBundleForMd5Filename","debug","require","filePath","projectRoot","dev","devServer","isHermes","includeSourceMaps","exp","files","useMd5Filename","virtualEntry","toPosixPath","resolveFrom","hash","crypto","createHash","update","digest","outputName","DOM_COMPONENTS_BUNDLE_DIR","generatedEntryPath","startsWith","url","fileURLToPath","baseUrl","relativeImport","path","posix","relative","dirname","bundle","legacySinglePageExportBundleAsync","platform","domRoot","encodeURI","splitChunks","env","EXPO_NO_BUNDLE_SPLITTING","mainModuleName","resolveRealEntryFilePath","mode","engine","undefined","serializerIncludeMaps","bytecode","reactCompiler","experiments","minify","artifact","artifacts","md5","source","filename","type","html","serializeHtmlWithAssets","isExporting","resources","template","getDomComponentHtml","serialAssets","map","a","join","getFilesFromSerialAssets","set","contents","htmlOutputName","assetsMetadata","push","ext","htmlContent","get","assert","htmlMd5","toString","htmlMd5Filename","delete","domComponentReference","nativeBundle","assetEntity","Buffer","isBuffer","searchBuffer","from","replaceBuffer","length","index","indexOf","copy","search","replace","replaceAll"],"mappings":"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"}